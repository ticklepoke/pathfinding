{"version":3,"sources":["interactions/index.ts","service/store.ts","service/Bfs.ts","components/GridItem.tsx","components/NumberGrid.tsx","service/AdjacencyList.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["mouseClick$","fromEvent","document","keyDown$","keyUp$","pipe","takeUntil","findPath$","adjList","start","end","path","target","queue","found","Set","length","push","add","curr","shift","undefined","has","neighbours","Bfs","from","concatMap","x","of","delay","GridItem","uuid","path$","useState","setFound","useEffect","subSink","SubSink","sink","subscribe","foundNum","unsubscribe","className","classnames","id","toString","NumberGrid","startingNode","setStartingNode","rows","cols","DIRECTIONS","grid","chunk","range","forEach","row","i","entry","j","dir","nextRow","nextCol","AdjacencyList","parseInt","map","gutter","wrap","col","DrawTools","Title","Typography","Text","Option","Select","App","setKeyPressed","drawTool","setDrawTool","key","handleDrawToolClick","tool","mode","expandIcon","level","strong","title","placement","type","DrawStartNode","onClick","NodeExpandOutlined","DrawEndNode","NodeCollapseOutlined","DrawObstacle","StopOutlined","placeholder","value","min","max","defaultValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9143b397.chunk.js","sourcesContent":["import { fromEvent } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\n\nconst mouseClick$ = fromEvent<MouseEvent>(document, \"click\");\nconst keyDown$ = fromEvent<KeyboardEvent>(document, \"keydown\");\nconst keyUp$ = fromEvent<KeyboardEvent>(document, \"keyup\");\n\nconst whileKeyPress$ = keyDown$.pipe(takeUntil(keyUp$));\n\nexport { mouseClick$, whileKeyPress$, keyDown$, keyUp$ };\n","import { from, of } from \"rxjs\";\nimport { concatMap, delay } from \"rxjs/operators\";\n\nimport { IAdjacencyList } from \"service/AdjacencyList\";\nimport Bfs from \"service/Bfs\";\n\nexport function findPath$(\n\tadjList: IAdjacencyList,\n\tstart: number,\n\tend?: number\n) {\n\tconst path = Bfs(adjList, start, end);\n\tif (!path) {\n\t\treturn;\n\t}\n\treturn from(path).pipe(concatMap((x) => of(x).pipe(delay(50))));\n}\n","import { IAdjacencyList } from \"service/AdjacencyList\";\n\nexport default function Bfs(\n\tadjList: IAdjacencyList,\n\tstart: number,\n\ttarget?: number\n) {\n\tconst queue: number[] = [];\n\tconst found: Set<number> = new Set();\n\n\tif (!adjList[start] || adjList[start].length === 0) {\n\t\treturn null;\n\t}\n\n\tqueue.push(...adjList[start]);\n\tfound.add(start);\n\n\twhile (queue.length > 0) {\n\t\tconst curr = queue.shift();\n\t\tif (curr === undefined || found.has(curr)) {\n\t\t\tcontinue;\n\t\t}\n\t\tfound.add(curr);\n\t\tif (curr === target) {\n\t\t\tbreak;\n\t\t}\n\t\tconst neighbours = adjList[curr];\n\t\tqueue.push(...neighbours);\n\t}\n\n\treturn found;\n}\n","import classnames from \"classnames\";\nimport React, { useEffect, useState } from \"react\";\nimport { Observable } from \"rxjs\";\nimport { SubSink } from \"subsink\";\n\ninterface GridItemProps {\n\tuuid: number;\n\tstart: number;\n\tpath$: Observable<number>;\n}\n\nexport default function GridItem({ uuid, start, path$ }: GridItemProps) {\n\tconst [found, setFound] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst subSink = new SubSink();\n\t\tsubSink.sink = path$.subscribe((foundNum) => {\n\t\t\tif (foundNum === uuid) {\n\t\t\t\tsetFound(true);\n\t\t\t}\n\t\t});\n\n\t\treturn () => subSink.unsubscribe();\n\t});\n\n\treturn (\n\t\t<div\n\t\t\tclassName={classnames(\n\t\t\t\t\"grid-item\",\n\t\t\t\t{ \"grid-item-start\": start === uuid },\n\t\t\t\t{ \"grid-item-found\": found }\n\t\t\t)}\n\t\t\tid={uuid.toString()}\n\t\t>\n\t\t\t{uuid}\n\t\t</div>\n\t);\n}\n","import { Col, Row } from \"antd\";\nimport { chunk, range } from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport { SubSink } from \"subsink\";\n\nimport { mouseClick$ } from \"interactions\";\nimport AdjacencyList from \"service/AdjacencyList\";\nimport { findPath$ } from \"service/store\";\n\nimport GridItem from \"./GridItem\";\n\nexport default function NumberGrid() {\n\tconst [startingNode, setStartingNode] = useState<string>(\"1\");\n\n\tuseEffect(() => {\n\t\tconst subSink = new SubSink();\n\t\tsubSink.sink = mouseClick$.subscribe(({ target }) => {\n\t\t\t// TODO: combine with key down\n\t\t\tconst targetElement = target as HTMLElement;\n\t\t\tsetStartingNode(targetElement.id);\n\t\t});\n\t\treturn () => {\n\t\t\tsubSink.unsubscribe();\n\t\t};\n\t}, []);\n\n\tconst adjList = AdjacencyList(10, 10);\n\tconst path$ = findPath$(adjList, parseInt(startingNode));\n\n\tif (!path$) {\n\t\treturn null;\n\t}\n\n\tconst grid = range(0, 100, 1);\n\tconst rows = chunk(grid, 10);\n\n\treturn (\n\t\t<div className=\"number-grid-container d-flex justify-center align-center\">\n\t\t\t<div className=\"overflow-auto\">\n\t\t\t\t{rows.map((cols, i) => (\n\t\t\t\t\t<Row gutter={0} key={i} wrap={false}>\n\t\t\t\t\t\t{cols.map((col, j) => (\n\t\t\t\t\t\t\t<Col key={j}>\n\t\t\t\t\t\t\t\t<GridItem\n\t\t\t\t\t\t\t\t\tuuid={col}\n\t\t\t\t\t\t\t\t\tstart={parseInt(startingNode)}\n\t\t\t\t\t\t\t\t\tpath$={path$}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Row>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { chunk, range } from \"lodash\";\n\nexport interface IAdjacencyList {\n\t[key: number]: number[];\n}\n\nexport default function AdjacencyList(rows: number, cols: number) {\n\tconst DIRECTIONS = [\n\t\t[-1, -1],\n\t\t[-1, 0],\n\t\t[-1, 1],\n\t\t[0, 1],\n\t\t[0, -1],\n\t\t[1, 1],\n\t\t[1, 0],\n\t\t[1, -1],\n\t];\n\n\tconst grid = chunk(range(0, rows * cols, 1), cols);\n\n\tconst adjList: IAdjacencyList = {};\n\tgrid.forEach((row, i) => {\n\t\trow.forEach((entry, j) => {\n\t\t\tconst curr: number[] = [];\n\t\t\tDIRECTIONS.forEach((dir) => {\n\t\t\t\tconst nextRow = i + dir[0];\n\t\t\t\tconst nextCol = j + dir[1];\n\t\t\t\tif (\n\t\t\t\t\tnextRow < 0 ||\n\t\t\t\t\tnextRow >= grid.length ||\n\t\t\t\t\tnextCol < 0 ||\n\t\t\t\t\tnextCol >= grid[0].length\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcurr.push(grid[nextRow][nextCol]);\n\t\t\t});\n\n\t\t\tadjList[entry] = curr;\n\t\t});\n\t});\n\n\treturn adjList;\n}\n","import {\n\tNodeCollapseOutlined,\n\tNodeExpandOutlined,\n\tStopOutlined,\n} from \"@ant-design/icons\";\nimport {\n\tButton,\n\tForm,\n\tInputNumber,\n\tMenu,\n\tSelect,\n\tTooltip,\n\tTypography,\n} from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { SubSink } from \"subsink\";\n\nimport NumberGrid from \"components/NumberGrid\";\nimport { keyDown$, keyUp$ } from \"interactions\";\n\nimport \"./App.css\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nexport enum DrawTools {\n\tDrawObstacle,\n\tDrawEndNode,\n\tDrawStartNode,\n}\n\nexport function App() {\n\tconst [, setKeyPressed] = useState<string | null>();\n\n\tconst [drawTool, setDrawTool] = useState<DrawTools | null>();\n\n\tuseEffect(() => {\n\t\tconst subSink = new SubSink();\n\n\t\tsubSink.sink = keyDown$.subscribe(({ key }) => {\n\t\t\tsetKeyPressed(key);\n\t\t});\n\n\t\tsubSink.sink = keyUp$.subscribe(() => {\n\t\t\tsetKeyPressed(null);\n\t\t});\n\n\t\treturn () => {\n\t\t\tsubSink.unsubscribe();\n\t\t};\n\t}, []);\n\n\tconst handleDrawToolClick = (tool: DrawTools) => {\n\t\tif (drawTool === tool) {\n\t\t\tsetDrawTool(null);\n\t\t} else {\n\t\t\tsetDrawTool(tool);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Menu className=\"vh-100 w-300px p-10\" mode=\"vertical\" expandIcon={null}>\n\t\t\t\t<Title level={3}>Pathfinding</Title>\n\t\t\t\t<Text strong>Tools</Text>\n\t\t\t\t<div className=\"w-100p d-flex justify-start mt-10 mb-20\">\n\t\t\t\t\t<Tooltip title=\"Draw Starting Node\" placement=\"bottomRight\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype={\n\t\t\t\t\t\t\t\tdrawTool === DrawTools.DrawStartNode ? \"primary\" : \"default\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonClick={() => handleDrawToolClick(DrawTools.DrawStartNode)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<NodeExpandOutlined />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t\t<Tooltip title=\"Draw Ending Node\" placement=\"bottomRight\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype={drawTool === DrawTools.DrawEndNode ? \"primary\" : \"default\"}\n\t\t\t\t\t\t\tonClick={() => handleDrawToolClick(DrawTools.DrawEndNode)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<NodeCollapseOutlined />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t\t<Tooltip title=\"Draw Obstacles\" placement=\"bottomRight\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype={drawTool === DrawTools.DrawObstacle ? \"primary\" : \"default\"}\n\t\t\t\t\t\t\tonClick={() => handleDrawToolClick(DrawTools.DrawObstacle)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<StopOutlined />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t\t<Text strong>Algorithm</Text>\n\t\t\t\t<Select className=\"w-100p mt-10 mb-20\" placeholder=\"Select Algorithm\">\n\t\t\t\t\t<Option value=\"1\">Breadth First Search</Option>\n\t\t\t\t\t<Option value=\"2\">Depth First Search</Option>\n\t\t\t\t</Select>\n\t\t\t\t<Text strong>Grid Size</Text>\n\t\t\t\t<Form className=\"mt-10 mb-20\">\n\t\t\t\t\t<Tooltip title=\"Width\" placement=\"bottomRight\">\n\t\t\t\t\t\t<InputNumber min={1} max={50} defaultValue={10} />\n\t\t\t\t\t</Tooltip>\n\t\t\t\t\t<Tooltip title=\"Height\" placement=\"bottomRight\">\n\t\t\t\t\t\t<InputNumber min={1} max={50} defaultValue={10} />\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</Form>\n\t\t\t\t<Button className=\"w-100p\" type=\"primary\">\n\t\t\t\t\tStart Pathfinding\n\t\t\t\t</Button>\n\t\t\t</Menu>\n\t\t\t<NumberGrid />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}