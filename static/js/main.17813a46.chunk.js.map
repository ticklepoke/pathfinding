{"version":3,"sources":["store/Grid/Grid.ts","store/Obstacles/Obstacles.ts","store/Grid/selectors.ts","store/Obstacles/index.ts","store/Job/types.ts","store/Tools/type.ts","store/Job/Job.ts","store/Job/selectors.ts","store/Tools/Tools.ts","store/Tools/selectors.ts","interactions/index.ts","store/Algorithm/types.ts","store/Algorithm/Algorithm.ts","store/Algorithm/selectors.ts","store/reducers.ts","store/store.ts","components/KeyboardShortcuts.tsx","components/Menu.tsx","service/store.ts","service/Bfs.ts","service/Dfs.ts","components/GridItem.tsx","components/NumberGrid.tsx","service/AdjacencyList.ts","App.tsx","reportWebVitals.ts","index.tsx","store/Grid/index.ts"],"names":["actionCreator","actionCreatorFactory","withinDimensions","newDimension","gridActionCreators","INC_COL","DEC_COL","INC_ROW","DEC_ROW","SET_ROW","SET_COL","gridReducer","makeReducer","rows","cols","case","state","newCols","newRows","obstaclesActionCreators","ADD_GRID_ITEM","REMOVE_GRID_ITEM","CLEAR_OBSTACLE","obstaclesReducer","obstacles","uuid","_","push","obstacle","getGridState","grid","getGridRowsCols","JobStatus","DrawTools","INITIAL_STATE","status","Idle","jobActionCreators","START_JOB","CLEAR_JOB","FINISH_JOB","SET_ERROR","RESOLVE_ERROR","jobReducer","Running","Finished","errorMessage","Error","getJobState","job","getJobStatus","getJobError","activatedTool","NoTool","toolsActionCreators","SELECT_TOOL","CLEAR_TOOL","toolsReducer","getActivatedTool","tools","getToolsState","fromEvent","document","determineDispatchAction","selectedTool","currentTool","store","dispatch","nodeClicked$","pipe","filter","e","target","targetElement","id","includes","map","nodeId","replace","Algorithms","algorithm","BreadthFirstSearch","algorithmActionCreators","SET_ALGORITHM","algorithmReducer","algo","getAlgorithmSelector","getAlgorithmState","createRootReducer","combineReducers","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION__","f","Text","Typography","KeyboardShortcuts","popoverContent","span","keyboard","content","title","placement","type","icon","RocketOutlined","shape","className","Title","Option","Select","Menu","useDispatch","useSelector","jobState","jobError","selectedAlgo","dispatchSetCol","useCallback","val","dispatchSetRow","dispatchStartJob","dispatchClearJob","dispatchSelectAlgo","dispatchSelectTool","renderButton","onClick","RedoOutlined","disabled","DisconnectOutlined","PlayCircleOutlined","level","strong","DrawStart","NodeExpandOutlined","DrawEnd","NodeCollapseOutlined","DrawObstacle","StopOutlined","danger","DeleteItem","DeleteOutlined","placeholder","value","onChange","DepthFirstSearch","min","max","algorithmToEnum","adjList","start","queue","found","Set","length","add","curr","shift","undefined","has","neighbours","stack","pop","GridItem","end","path$","useState","setFound","completeJob","useEffect","subSink","SubSink","sink","subscribe","foundNum","unsubscribe","classnames","toString","NumberGrid","startingNode","setStartingNode","endNode","setEndNode","numRows","numCols","selectedDrawTool","DIRECTIONS","temp","chunk","range","row","entry","forEach","i","j","dir","nextRow","nextCol","AdjacencyList","getState","path","from","concatMap","x","of","delay","findPath$","gutter","wrap","col","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createStore","compose","key","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.17813a46.chunk.js","sourcesContent":["import { IGridState } from \"store/Grid/types\";\nimport actionCreatorFactory from \"typescript-fsa\";\nimport { reducerWithInitialState as makeReducer } from \"typescript-fsa-reducers\";\n\nconst actionCreator = actionCreatorFactory(\"GRID\");\n\nconst INITIAL_STATE: IGridState = {\n\trows: 10,\n\tcols: 10,\n};\n\nconst MAX_DIMENSION = 50;\nconst MIN_DIMENSION = 1;\n\nexport function withinDimensions(newDimension: number) {\n\treturn newDimension <= MAX_DIMENSION && newDimension > MIN_DIMENSION;\n}\n\nexport const gridActionCreators = {\n\tINC_COL: actionCreator(\"INC_COL\"), // TODO: future extension with keyboard\n\tDEC_COL: actionCreator(\"DEC_COL\"),\n\tINC_ROW: actionCreator(\"INC_ROW\"),\n\tDEC_ROW: actionCreator(\"DEC_ROW\"),\n\tSET_ROW: actionCreator<number>(\"SET_ROW\"),\n\tSET_COL: actionCreator<number>(\"SET_COL\"),\n};\n\nexport const gridReducer = makeReducer(INITIAL_STATE)\n\t.case(gridActionCreators.INC_COL, (state: IGridState) => ({\n\t\t...state,\n\t\tcols: withinDimensions(state.cols + 1) ? state.cols + 1 : state.cols,\n\t}))\n\t.case(gridActionCreators.DEC_COL, (state: IGridState) => ({\n\t\t...state,\n\t\tcols: withinDimensions(state.cols - 1) ? state.cols - 1 : state.cols,\n\t}))\n\t.case(gridActionCreators.INC_ROW, (state: IGridState) => ({\n\t\t...state,\n\t\trows: withinDimensions(state.rows + 1) ? state.rows + 1 : state.rows,\n\t}))\n\t.case(gridActionCreators.DEC_ROW, (state: IGridState) => ({\n\t\t...state,\n\t\trows: withinDimensions(state.rows - 1) ? state.rows - 1 : state.rows,\n\t}))\n\t.case(gridActionCreators.SET_COL, (state: IGridState, newCols: number) => ({\n\t\t...state,\n\t\tcols: withinDimensions(newCols) ? newCols : state.cols,\n\t}))\n\t.case(gridActionCreators.SET_ROW, (state: IGridState, newRows: number) => ({\n\t\t...state,\n\t\trows: withinDimensions(newRows) ? newRows : state.rows,\n\t}));\n","import * as _ from \"lodash\";\n\nimport actionCreatorFactory from \"typescript-fsa\";\nimport { reducerWithInitialState as makeReducer } from \"typescript-fsa-reducers\";\n\nimport { IObstaclesState } from \"./types\";\n\nconst actionCreator = actionCreatorFactory(\"OBSTACLES\");\n\nconst INITIAL_STATE: IObstaclesState = {\n\tobstacles: [],\n};\n\nexport const obstaclesActionCreators = {\n\tADD_GRID_ITEM: actionCreator<string>(\"ADD_GRID_ITEM\"),\n\tREMOVE_GRID_ITEM: actionCreator<string>(\"REMOVE_GRID_ITEM\"),\n\tCLEAR_OBSTACLE: actionCreator(\"CLEAR_OBSTACLE\"),\n};\n\nexport const obstaclesReducer = makeReducer(INITIAL_STATE)\n\t.case(\n\t\tobstaclesActionCreators.ADD_GRID_ITEM,\n\t\t(state: IObstaclesState, uuid: string) => {\n\t\t\tconst obstacles = _.cloneDeep(state.obstacles);\n\t\t\tif (!_.some(obstacles, { uuid })) {\n\t\t\t\tobstacles.push({ uuid });\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tobstacles,\n\t\t\t};\n\t\t}\n\t)\n\t.case(\n\t\tobstaclesActionCreators.REMOVE_GRID_ITEM,\n\t\t(state: IObstaclesState, uuid: string) => ({\n\t\t\t...state,\n\t\t\tobstacles: _.remove(\n\t\t\t\tstate.obstacles,\n\t\t\t\t(obstacle) => obstacle.uuid === uuid\n\t\t\t),\n\t\t})\n\t)\n\t.case(\n\t\tobstaclesActionCreators.CLEAR_OBSTACLE,\n\t\t(state: IObstaclesState) => state\n\t);\n","import { IState } from \"store/state\";\n\nconst getGridState = (state: IState) => state.grid;\n\nexport const getGridRowsCols = (state: IState) => ({\n\trows: getGridState(state).rows,\n\tcols: getGridState(state).cols,\n});\n","export * from \"./Obstacles\";\nexport * from \"./selectors\";\nexport * from \"./types\";\n","export enum JobStatus {\n\tRunning,\n\tIdle, // Grid is empty\n\tFinished, // Grid is fully colored\n\tError,\n}\n\nexport interface IJobState {\n\tstatus: JobStatus;\n\terrorMessage?: string;\n}\n","export enum DrawTools {\n\tDrawStart,\n\tDrawEnd,\n\tDrawObstacle,\n\tDeleteItem,\n\tNoTool,\n}\n\nexport interface IToolsState {\n\tactivatedTool: DrawTools;\n}\n","import { IJobState, JobStatus } from \"store/Job/types\";\nimport actionCreatorFactory from \"typescript-fsa\";\nimport { reducerWithInitialState as makeReducer } from \"typescript-fsa-reducers\";\n\nconst actionCreator = actionCreatorFactory(\"JOB\");\n\nconst INITIAL_STATE: IJobState = {\n\tstatus: JobStatus.Idle,\n};\n\nexport const jobActionCreators = {\n\tSTART_JOB: actionCreator(\"START\"),\n\tCLEAR_JOB: actionCreator(\"CLEAR\"),\n\tFINISH_JOB: actionCreator(\"FINISH\"),\n\tSET_ERROR: actionCreator<string | undefined>(\"SET_ERROR\"),\n\tRESOLVE_ERROR: actionCreator(\"RESOLVE_ERROR\"),\n};\n\nexport const jobReducer = makeReducer(INITIAL_STATE)\n\t.case(jobActionCreators.START_JOB, (state: IJobState) => ({\n\t\t...state,\n\t\tstatus: JobStatus.Running,\n\t}))\n\t.case(jobActionCreators.CLEAR_JOB, (state: IJobState) => ({\n\t\t...state,\n\t\tstatus: JobStatus.Idle,\n\t}))\n\t.case(jobActionCreators.FINISH_JOB, (state: IJobState) => ({\n\t\t...state,\n\t\tstatus: JobStatus.Finished,\n\t}))\n\t.case(\n\t\tjobActionCreators.SET_ERROR,\n\t\t(state: IJobState, errorMessage?: string) => ({\n\t\t\t...state,\n\t\t\tstatus: JobStatus.Error,\n\t\t\terrorMessage,\n\t\t})\n\t)\n\t.case(jobActionCreators.RESOLVE_ERROR, (state: IJobState) => ({\n\t\t...state,\n\t\tstatus: JobStatus.Idle,\n\t}));\n","import { IState } from \"store/state\";\n\nconst getJobState = (state: IState) => state.job;\n\nexport const getJobStatus = (state: IState) => getJobState(state).status;\n\nexport const getJobError = (state: IState) => getJobState(state).errorMessage;\n","import { DrawTools, IToolsState } from \"store/Tools/type\";\nimport actionCreatorFactory from \"typescript-fsa\";\nimport { reducerWithInitialState as makeReducer } from \"typescript-fsa-reducers\";\n\nconst actionCreator = actionCreatorFactory(\"TOOLS\");\n\nconst INITIAL_STATE: IToolsState = {\n\tactivatedTool: DrawTools.NoTool,\n};\n\nexport const toolsActionCreators = {\n\tSELECT_TOOL: actionCreator<DrawTools>(\"SELECT\"),\n\tCLEAR_TOOL: actionCreator(\"CLEAR\"),\n};\n\nexport const toolsReducer = makeReducer(INITIAL_STATE)\n\t.case(\n\t\ttoolsActionCreators.SELECT_TOOL,\n\t\t(state: IToolsState, activatedTool: DrawTools) => ({\n\t\t\t...state,\n\t\t\tactivatedTool,\n\t\t})\n\t)\n\t.case(toolsActionCreators.CLEAR_TOOL, (state: IToolsState) => ({\n\t\t...state,\n\t\tactivatedTool: DrawTools.NoTool,\n\t}));\n","import { IState } from \"store/state\";\n\nconst getToolsState = (state: IState) => state.tools;\n\nexport const getActivatedTool = (state: IState) =>\n\tgetToolsState(state).activatedTool;\n","import { store } from \"index\";\nimport { Store } from \"redux\";\nimport { fromEvent, Observable } from \"rxjs\";\nimport { filter, map } from \"rxjs/operators\";\n\nimport { JobStatus } from \"store/Job\";\nimport { DrawTools, toolsActionCreators } from \"store/Tools\";\n\nexport const mouseClick$ = fromEvent<MouseEvent>(document, \"click\");\n\nfunction determineDispatchAction(\n\tselectedTool: DrawTools,\n\tcurrentTool: DrawTools,\n\tstore: Store\n) {\n\tif (currentTool === selectedTool) {\n\t\tstore.dispatch(toolsActionCreators.CLEAR_TOOL());\n\t} else {\n\t\tstore.dispatch(toolsActionCreators.SELECT_TOOL(selectedTool));\n\t}\n}\n\nfunction isClickedGrid(e: KeyboardEvent) {\n\tif (!e.target) {\n\t\treturn false;\n\t}\n\tconst targetElement = e.target as HTMLElement;\n\tif (!targetElement.id || !targetElement.id.includes(\"grid-item-\")) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nexport interface INodeClicked {\n\tnodeId: string;\n}\n\nexport const nodeClicked$: Observable<INodeClicked> = fromEvent<KeyboardEvent>(\n\tdocument,\n\t\"mousedown\"\n).pipe(\n\tfilter(isClickedGrid),\n\tmap(({ target }) => {\n\t\tconst targetElement = target as HTMLElement;\n\t\tconst id = targetElement.id.replace(\"grid-item-\", \"\");\n\t\t// TODO: check for nearby id, make sure its a grid element,\n\t\t// return appropriate tool\n\t\treturn {\n\t\t\tnodeId: id,\n\t\t};\n\t})\n);\n\nexport function initKeyPressListener() {\n\tconst keyDown$ = fromEvent<KeyboardEvent>(document, \"keydown\");\n\n\tkeyDown$.subscribe(({ key }) => {\n\t\tconst currentTool = store.getState().tools.activatedTool;\n\n\t\tif (store.getState().job.status === JobStatus.Running) {\n\t\t\treturn;\n\t\t}\n\t\tswitch (key) {\n\t\t\tcase \"s\":\n\t\t\t\tdetermineDispatchAction(DrawTools.DrawStart, currentTool, store);\n\t\t\t\tbreak;\n\t\t\tcase \"e\":\n\t\t\t\tdetermineDispatchAction(DrawTools.DrawEnd, currentTool, store);\n\t\t\t\tbreak;\n\t\t\tcase \"d\":\n\t\t\t\tdetermineDispatchAction(DrawTools.DeleteItem, currentTool, store);\n\t\t\t\tbreak;\n\t\t\tcase \"o\":\n\t\t\t\tdetermineDispatchAction(DrawTools.DrawObstacle, currentTool, store);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t});\n}\n","export enum Algorithms {\n\tBreadthFirstSearch = \"breadthFirstSearch\",\n\tDepthFirstSearch = \"depthFirstSearch\",\n}\n\nexport interface IAlgorithmState {\n\talgorithm: Algorithms;\n}\n","import { Algorithms, IAlgorithmState } from \"store/Algorithm/types\";\nimport actionCreatorFactory from \"typescript-fsa\";\nimport { reducerWithInitialState as makeReducer } from \"typescript-fsa-reducers\";\n\nconst actionCreator = actionCreatorFactory(\"ALGORITHM\");\n\nconst INITIAL_STATE: IAlgorithmState = {\n\talgorithm: Algorithms.BreadthFirstSearch,\n};\n\nexport const algorithmActionCreators = {\n\tSET_ALGORITHM: actionCreator<Algorithms>(\"SET_ALGORITHM\"),\n};\n\nexport const algorithmReducer = makeReducer(INITIAL_STATE).case(\n\talgorithmActionCreators.SET_ALGORITHM,\n\t(state: IAlgorithmState, algo: Algorithms) => ({\n\t\t...state,\n\t\talgorithm: algo,\n\t})\n);\n","import { IState } from \"store/state\";\n\nconst getAlgorithmState = (state: IState) => state.algorithm;\n\nexport const getAlgorithmSelector = (state: IState) =>\n\tgetAlgorithmState(state).algorithm;\n","import { combineReducers } from \"redux\";\n\nimport { algorithmReducer } from \"store/Algorithm\";\nimport { gridReducer } from \"store/Grid/Grid\";\nimport { jobReducer } from \"store/Job/Job\";\nimport { obstaclesReducer } from \"store/Obstacles\";\nimport { toolsReducer } from \"store/Tools\";\n\nimport { IState } from \"./state\";\n\nconst createRootReducer = () =>\n\tcombineReducers<IState>({\n\t\tobstacles: obstaclesReducer,\n\t\tgrid: gridReducer,\n\t\tjob: jobReducer,\n\t\talgorithm: algorithmReducer,\n\t\ttools: toolsReducer,\n\t});\n\nexport default createRootReducer;\n","import { compose, createStore, StoreEnhancer } from \"redux\";\n\nimport createRootReducer from \"./reducers\";\n\ninterface IHasDevToolsExtension {\n\t__REDUX_DEVTOOLS_EXTENSION__: () => StoreEnhancer;\n}\n\nconst devToolsExtension: StoreEnhancer =\n\ttypeof window === \"object\" &&\n\t((window as unknown) as Window & IHasDevToolsExtension)\n\t\t.__REDUX_DEVTOOLS_EXTENSION__\n\t\t? ((window as unknown) as Window &\n\t\t\t\tIHasDevToolsExtension).__REDUX_DEVTOOLS_EXTENSION__()\n\t\t: (f) => f;\n\nexport function initStore() {\n\tconst store = createStore(createRootReducer(), compose(devToolsExtension));\n\treturn store;\n}\n","import { RocketOutlined } from \"@ant-design/icons\";\nimport { Button, Col, Popover, Row, Typography } from \"antd\";\nimport React from \"react\";\n\nconst { Text } = Typography;\n\nexport default function KeyboardShortcuts() {\n\tconst popoverContent = (\n\t\t<>\n\t\t\t<Row>\n\t\t\t\t<Col span={20}>\n\t\t\t\t\t<Text>Draw start node</Text>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={4}>\n\t\t\t\t\t<Text keyboard>s</Text>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col span={20}>\n\t\t\t\t\t<Text>Draw end node</Text>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={4}>\n\t\t\t\t\t<Text keyboard>e</Text>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col span={20}>\n\t\t\t\t\t<Text>Draw obstacle</Text>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={4}>\n\t\t\t\t\t<Text keyboard>o</Text>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col span={20}>\n\t\t\t\t\t<Text>Delete drawing</Text>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={4}>\n\t\t\t\t\t<Text keyboard>d</Text>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</>\n\t);\n\treturn (\n\t\t<Popover\n\t\t\tcontent={popoverContent}\n\t\t\ttitle=\"Keyboard Shortcuts\"\n\t\t\tplacement=\"topRight\"\n\t\t>\n\t\t\t<Button\n\t\t\t\ttype=\"primary\"\n\t\t\t\ticon={<RocketOutlined />}\n\t\t\t\tshape=\"circle\"\n\t\t\t\tclassName=\"keyboard-shortcuts-button\"\n\t\t\t/>\n\t\t</Popover>\n\t);\n}\n","import {\n\tDeleteOutlined,\n\tDisconnectOutlined,\n\tNodeCollapseOutlined,\n\tNodeExpandOutlined,\n\tPlayCircleOutlined,\n\tRedoOutlined,\n\tStopOutlined,\n} from \"@ant-design/icons\";\nimport {\n\tButton,\n\tForm,\n\tInputNumber,\n\tSelect,\n\tSpin,\n\tTooltip,\n\tTypography,\n} from \"antd\";\nimport React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n\talgorithmActionCreators,\n\tAlgorithms,\n\tgetAlgorithmSelector,\n} from \"store/Algorithm\";\nimport { getGridRowsCols, gridActionCreators } from \"store/Grid\";\nimport {\n\tgetJobError,\n\tgetJobStatus,\n\tjobActionCreators,\n\tJobStatus,\n} from \"store/Job\";\nimport { DrawTools, getActivatedTool, toolsActionCreators } from \"store/Tools\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nexport default function Menu() {\n\tconst dispatch = useDispatch();\n\tconst { rows, cols } = useSelector(getGridRowsCols);\n\tconst jobState = useSelector(getJobStatus);\n\tconst jobError = useSelector(getJobError);\n\tconst selectedAlgo = useSelector(getAlgorithmSelector);\n\tconst activatedTool = useSelector(getActivatedTool);\n\n\tconst dispatchSetCol = useCallback(\n\t\t(val: number) => {\n\t\t\tdispatch(gridActionCreators.SET_COL(val));\n\t\t},\n\t\t[dispatch]\n\t);\n\n\tconst dispatchSetRow = useCallback(\n\t\t(val: number) => {\n\t\t\tdispatch(gridActionCreators.SET_ROW(val));\n\t\t},\n\t\t[dispatch]\n\t);\n\n\tconst dispatchStartJob = useCallback(() => {\n\t\tdispatch(jobActionCreators.START_JOB());\n\t}, [dispatch]);\n\n\tconst dispatchClearJob = useCallback(() => {\n\t\tdispatch(jobActionCreators.CLEAR_JOB());\n\t}, [dispatch]);\n\n\tconst dispatchSelectAlgo = useCallback(\n\t\t(algo: Algorithms) => {\n\t\t\tdispatch(algorithmActionCreators.SET_ALGORITHM(algo));\n\t\t},\n\t\t[dispatch]\n\t);\n\n\tconst dispatchSelectTool = useCallback(\n\t\t(selectedTool: DrawTools) => {\n\t\t\tif (selectedTool === activatedTool) {\n\t\t\t\tdispatch(toolsActionCreators.CLEAR_TOOL());\n\t\t\t} else {\n\t\t\t\tdispatch(toolsActionCreators.SELECT_TOOL(selectedTool));\n\t\t\t}\n\t\t},\n\t\t[dispatch, activatedTool]\n\t);\n\n\tconst renderButton = useCallback(() => {\n\t\tif (jobState === JobStatus.Finished) {\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"w-100p\"\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\tonClick={dispatchClearJob}\n\t\t\t\t\ticon={<RedoOutlined />}\n\t\t\t\t>\n\t\t\t\t\tClear Path\n\t\t\t\t</Button>\n\t\t\t);\n\t\t}\n\t\tif (jobState === JobStatus.Running) {\n\t\t\treturn (\n\t\t\t\t<Button className=\"w-100p\" type=\"primary\" disabled>\n\t\t\t\t\t<Spin />\n\t\t\t\t</Button>\n\t\t\t);\n\t\t}\n\n\t\tif (jobState === JobStatus.Error) {\n\t\t\t<Button\n\t\t\t\tclassName=\"w-100p\"\n\t\t\t\ttype=\"primary\"\n\t\t\t\tdisabled\n\t\t\t\ticon={<DisconnectOutlined />}\n\t\t\t>\n\t\t\t\tSomething went wrong\n\t\t\t</Button>;\n\t\t}\n\n\t\treturn (\n\t\t\t<Button\n\t\t\t\tclassName=\"w-100p\"\n\t\t\t\ttype=\"primary\"\n\t\t\t\tonClick={dispatchStartJob}\n\t\t\t\ticon={<PlayCircleOutlined />}\n\t\t\t>\n\t\t\t\tStart Pathfinding\n\t\t\t</Button>\n\t\t);\n\t}, [jobState]);\n\n\treturn (\n\t\t<div className=\"vh-100 w-300px p-10 border-right-gray\">\n\t\t\t<Title level={3}>Pathfinding</Title>\n\t\t\t<Text strong>Tools</Text>\n\t\t\t<div className=\"w-100p d-flex justify-start mt-10 mb-20\">\n\t\t\t\t<Tooltip title=\"Draw Starting Node\" placement=\"bottomRight\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype={activatedTool === DrawTools.DrawStart ? \"primary\" : \"default\"}\n\t\t\t\t\t\tonClick={() => dispatchSelectTool(DrawTools.DrawStart)}\n\t\t\t\t\t\tdisabled={jobState === JobStatus.Running}\n\t\t\t\t\t>\n\t\t\t\t\t\t<NodeExpandOutlined />\n\t\t\t\t\t</Button>\n\t\t\t\t</Tooltip>\n\t\t\t\t<Tooltip title=\"Draw Ending Node\" placement=\"bottomRight\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype={activatedTool === DrawTools.DrawEnd ? \"primary\" : \"default\"}\n\t\t\t\t\t\tonClick={() => dispatchSelectTool(DrawTools.DrawEnd)}\n\t\t\t\t\t\tdisabled={jobState === JobStatus.Running}\n\t\t\t\t\t>\n\t\t\t\t\t\t<NodeCollapseOutlined />\n\t\t\t\t\t</Button>\n\t\t\t\t</Tooltip>\n\t\t\t\t<Tooltip title=\"Draw Obstacles\" placement=\"bottomRight\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype={\n\t\t\t\t\t\t\tactivatedTool === DrawTools.DrawObstacle ? \"primary\" : \"default\"\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonClick={() => dispatchSelectTool(DrawTools.DrawObstacle)}\n\t\t\t\t\t\tdisabled={jobState === JobStatus.Running}\n\t\t\t\t\t>\n\t\t\t\t\t\t<StopOutlined />\n\t\t\t\t\t</Button>\n\t\t\t\t</Tooltip>\n\t\t\t\t<Tooltip title=\"Clear Node\" placement=\"bottomRight\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tdanger\n\t\t\t\t\t\ttype={\n\t\t\t\t\t\t\tactivatedTool === DrawTools.DeleteItem ? \"primary\" : \"default\"\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonClick={() => dispatchSelectTool(DrawTools.DeleteItem)}\n\t\t\t\t\t\tdisabled={jobState === JobStatus.Running}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DeleteOutlined />\n\t\t\t\t\t</Button>\n\t\t\t\t</Tooltip>\n\t\t\t</div>\n\t\t\t<Text strong>Algorithm</Text>\n\t\t\t<Select\n\t\t\t\tclassName=\"w-100p mt-10 mb-20\"\n\t\t\t\tplaceholder=\"Select Algorithm\"\n\t\t\t\tvalue={selectedAlgo}\n\t\t\t\tonChange={dispatchSelectAlgo}\n\t\t\t>\n\t\t\t\t<Option value={Algorithms.BreadthFirstSearch}>\n\t\t\t\t\tBreadth First Search\n\t\t\t\t</Option>\n\t\t\t\t<Option value={Algorithms.DepthFirstSearch}>Depth First Search</Option>\n\t\t\t</Select>\n\t\t\t<Text strong>Grid Size</Text>\n\t\t\t<Form className=\"mt-10 mb-20\">\n\t\t\t\t<Tooltip title=\"Width\" placement=\"bottomRight\">\n\t\t\t\t\t<InputNumber\n\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\tmax={50}\n\t\t\t\t\t\tvalue={cols}\n\t\t\t\t\t\tonChange={(val) => typeof val === \"number\" && dispatchSetCol(val)}\n\t\t\t\t\t/>\n\t\t\t\t</Tooltip>\n\t\t\t\t<Tooltip title=\"Height\" placement=\"bottomRight\">\n\t\t\t\t\t<InputNumber\n\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\tmax={50}\n\t\t\t\t\t\tvalue={rows}\n\t\t\t\t\t\tonChange={(val) => typeof val === \"number\" && dispatchSetRow(val)}\n\t\t\t\t\t/>\n\t\t\t\t</Tooltip>\n\t\t\t</Form>\n\t\t\t{renderButton()}\n\t\t\t{jobError && <Text type=\"danger\">An error occured: {jobError}</Text>}\n\t\t</div>\n\t);\n}\n","import { store } from \"index\";\nimport { from, of } from \"rxjs\";\nimport { concatMap, delay } from \"rxjs/operators\";\n\nimport { IAdjacencyList } from \"service/AdjacencyList\";\nimport Bfs from \"service/Bfs\";\nimport Dfs from \"service/Dfs\";\nimport { Algorithms } from \"store/Algorithm\";\n\nconst algorithmToEnum = {\n\t[Algorithms.BreadthFirstSearch]: Bfs,\n\t[Algorithms.DepthFirstSearch]: Dfs,\n};\n\nexport function findPath$(\n\tadjList: IAdjacencyList,\n\tstart: string,\n\tend?: string\n) {\n\tconst selectedAlgo = store.getState().algorithm.algorithm;\n\tconst path = algorithmToEnum[selectedAlgo](adjList, start, end);\n\n\tif (!path) {\n\t\treturn;\n\t}\n\treturn from(path).pipe(concatMap((x) => of(x).pipe(delay(50))));\n}\n","import { IAdjacencyList } from \"service/AdjacencyList\";\n\nexport default function Bfs(\n\tadjList: IAdjacencyList,\n\tstart: string,\n\ttarget?: string\n) {\n\tconst queue: string[] = [];\n\tconst found: Set<string> = new Set();\n\n\tif (!adjList[start] || adjList[start].length === 0) {\n\t\treturn null;\n\t}\n\n\tqueue.push(...adjList[start]);\n\tfound.add(start);\n\n\twhile (queue.length > 0) {\n\t\tconst curr = queue.shift();\n\t\tif (curr === undefined || found.has(curr)) {\n\t\t\tcontinue;\n\t\t}\n\t\tfound.add(curr);\n\t\tif (curr === target) {\n\t\t\tbreak;\n\t\t}\n\t\tconst neighbours = adjList[curr];\n\t\tqueue.push(...neighbours);\n\t}\n\n\treturn found;\n}\n","import { IAdjacencyList } from \"service/AdjacencyList\";\n\nexport default function Dfs(\n\tadjList: IAdjacencyList,\n\tstart: string,\n\ttarget?: string\n) {\n\tconst stack: string[] = [];\n\tconst found: Set<string> = new Set();\n\n\tif (!adjList[start] || adjList[start].length === 0) {\n\t\treturn null;\n\t}\n\n\tstack.push(...adjList[start]);\n\tfound.add(start);\n\n\twhile (stack.length > 0) {\n\t\tconst curr = stack.pop();\n\t\tif (curr === undefined || found.has(curr)) {\n\t\t\tcontinue;\n\t\t}\n\t\tfound.add(curr);\n\t\tif (curr === target) {\n\t\t\tbreak;\n\t\t}\n\t\tconst neighbours = adjList[curr];\n\t\tstack.push(...neighbours);\n\t}\n\n\treturn found;\n}\n","import classnames from \"classnames\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Observable } from \"rxjs\";\nimport { SubSink } from \"subsink\";\n\nimport { jobActionCreators } from \"store/Job\";\nimport { DrawTools, getActivatedTool } from \"store/Tools\";\n\ninterface IGridItemProps {\n\tuuid: string;\n\tstart: string;\n\tend?: string;\n\tpath$?: Observable<string>;\n}\n\nexport default function GridItem({ uuid, start, end, path$ }: IGridItemProps) {\n\tconst [found, setFound] = useState(false);\n\tconst dispatch = useDispatch();\n\tconst selectedTool = useSelector(getActivatedTool);\n\n\tconst completeJob = useCallback(() => {\n\t\tdispatch(jobActionCreators.FINISH_JOB());\n\t}, [dispatch]);\n\n\tuseEffect(() => {\n\t\tconst subSink = new SubSink();\n\t\tif (path$) {\n\t\t\tsubSink.sink = path$.subscribe(\n\t\t\t\t(foundNum) => {\n\t\t\t\t\tif (foundNum === uuid) {\n\t\t\t\t\t\tsetFound(true);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tnull,\n\t\t\t\tcompleteJob\n\t\t\t);\n\t\t} else {\n\t\t\tsetFound(false);\n\t\t}\n\t\treturn () => subSink.unsubscribe();\n\t});\n\n\treturn (\n\t\t<div\n\t\t\tclassName={classnames(\n\t\t\t\t\"grid-item\",\n\t\t\t\t{ \"grid-item-start\": start === uuid },\n\t\t\t\t{ \"grid-item-end\": end === uuid },\n\t\t\t\t{ \"grid-item-found\": found },\n\t\t\t\t{\n\t\t\t\t\t\"cursor-cell\": selectedTool !== DrawTools.NoTool,\n\t\t\t\t}\n\t\t\t)}\n\t\t\tid={\"grid-item-\" + uuid.toString()}\n\t\t>\n\t\t\t{uuid}\n\t\t</div>\n\t);\n}\n","import { Col, Row } from \"antd\";\nimport { chunk, range } from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Observable } from \"rxjs\";\nimport { SubSink } from \"subsink\";\n\nimport { nodeClicked$ } from \"interactions\";\nimport AdjacencyList from \"service/AdjacencyList\";\nimport { findPath$ } from \"service/store\";\nimport { getGridRowsCols } from \"store/Grid\";\nimport { getJobStatus, JobStatus } from \"store/Job\";\nimport { DrawTools, getActivatedTool } from \"store/Tools\";\n\nimport GridItem from \"./GridItem\";\n\nexport default function NumberGrid() {\n\tconst [startingNode, setStartingNode] = useState<string>(\"0\");\n\tconst [endNode, setEndNode] = useState<string | undefined>();\n\n\tconst { rows: numRows, cols: numCols } = useSelector(getGridRowsCols);\n\tconst jobState = useSelector(getJobStatus);\n\tconst selectedDrawTool = useSelector(getActivatedTool);\n\tlet path$: Observable<string> | undefined;\n\n\tuseEffect(() => {\n\t\tconst subSink = new SubSink();\n\t\t// TODO: refactor this into a pure js file, use store.dispatch() to set the\n\t\t// starting node\n\t\tsubSink.sink = nodeClicked$.subscribe((e) => {\n\t\t\tif (selectedDrawTool === DrawTools.DrawStart) {\n\t\t\t\tsetStartingNode(e.nodeId);\n\t\t\t} else if (selectedDrawTool === DrawTools.DrawEnd) {\n\t\t\t\tsetEndNode(e.nodeId);\n\t\t\t}\n\t\t});\n\t\treturn () => {\n\t\t\tsubSink.unsubscribe();\n\t\t};\n\t}, [selectedDrawTool, nodeClicked$]);\n\n\tif (jobState === JobStatus.Running || jobState === JobStatus.Finished) {\n\t\tconst adjList = AdjacencyList(numRows, numCols);\n\t\tpath$ = findPath$(adjList, startingNode, endNode);\n\t}\n\n\t// if (!path$ || jobState !== JobStatus.Running) {\n\t// \treturn null;\n\t// }\n\n\tconst grid = range(0, numRows * numCols, 1);\n\tconst rows = chunk(grid, numCols);\n\treturn (\n\t\t<div className=\"number-grid-container d-flex justify-center align-center\">\n\t\t\t<div className=\"overflow-auto\">\n\t\t\t\t{rows.map((cols, i) => (\n\t\t\t\t\t<Row gutter={0} key={i} wrap={false}>\n\t\t\t\t\t\t{cols.map((col, j) => (\n\t\t\t\t\t\t\t<Col key={j}>\n\t\t\t\t\t\t\t\t<GridItem\n\t\t\t\t\t\t\t\t\tuuid={col.toString()}\n\t\t\t\t\t\t\t\t\tstart={startingNode}\n\t\t\t\t\t\t\t\t\tend={endNode}\n\t\t\t\t\t\t\t\t\tpath$={path$}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Row>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { chunk, map, range } from \"lodash\";\n\nexport interface IAdjacencyList {\n\t[key: string]: string[];\n}\n\nexport default function AdjacencyList(rows: number, cols: number) {\n\tconst DIRECTIONS = [\n\t\t[-1, -1],\n\t\t[-1, 0],\n\t\t[-1, 1],\n\t\t[0, 1],\n\t\t[0, -1],\n\t\t[1, 1],\n\t\t[1, 0],\n\t\t[1, -1],\n\t];\n\n\tconst temp = chunk(range(0, rows * cols, 1), cols);\n\tconst grid = map(temp, (row) => row.map((entry) => entry.toString()));\n\n\tconst adjList: IAdjacencyList = {};\n\tgrid.forEach((row, i) => {\n\t\trow.forEach((entry, j) => {\n\t\t\tconst curr: string[] = [];\n\t\t\tDIRECTIONS.forEach((dir) => {\n\t\t\t\tconst nextRow = i + dir[0];\n\t\t\t\tconst nextCol = j + dir[1];\n\t\t\t\tif (\n\t\t\t\t\tnextRow < 0 ||\n\t\t\t\t\tnextRow >= grid.length ||\n\t\t\t\t\tnextCol < 0 ||\n\t\t\t\t\tnextCol >= grid[0].length\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcurr.push(grid[nextRow][nextCol]);\n\t\t\t});\n\n\t\t\tadjList[entry] = curr;\n\t\t});\n\t});\n\n\treturn adjList;\n}\n","import React from \"react\";\n\nimport KeyboardShortcuts from \"components/KeyboardShortcuts\";\nimport Menu from \"components/Menu\";\nimport NumberGrid from \"components/NumberGrid\";\n\nimport \"./App.css\";\n\nexport function App() {\n\treturn (\n\t\t<div>\n\t\t\t<Menu />\n\t\t\t<NumberGrid />\n\t\t\t<KeyboardShortcuts />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { initKeyPressListener } from \"interactions\";\nimport { initStore } from \"store/store\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"./index.css\";\n\nexport const store = initStore();\ninitKeyPressListener();\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export * from \"./selectors\";\nexport * from \"./Grid\";\nexport * from \"./types\";\n"],"sourceRoot":""}