{"version":3,"sources":["store/Grid/Grid.ts","store/Obstacles/Obstacles.ts","store/Grid/selectors.ts","store/Obstacles/index.ts","store/Job/types.ts","store/Job/Job.ts","store/reducers.ts","store/store.ts","components/Menu.tsx","store/Job/selectors.ts","service/store.ts","service/Bfs.ts","components/GridItem.tsx","components/NumberGrid.tsx","service/AdjacencyList.ts","interactions/index.ts","App.tsx","reportWebVitals.ts","index.tsx","store/Grid/index.ts"],"names":["actionCreator","actionCreatorFactory","withinDimensions","newDimension","gridActionCreators","INC_COL","DEC_COL","INC_ROW","DEC_ROW","SET_ROW","SET_COL","gridReducer","makeReducer","rows","cols","case","state","newCols","newRows","obstaclesActionCreators","ADD_GRID_ITEM","REMOVE_GRID_ITEM","CLEAR_OBSTACLE","obstaclesReducer","obstacles","uuid","_","push","obstacle","getGridState","grid","getGridRowsCols","JobStatus","INITIAL_STATE","status","Idle","jobActionCreators","START_JOB","STOP_JOB","SET_ERROR","RESOLVE_ERROR","jobReducer","Running","errorMessage","Error","createRootReducer","combineReducers","job","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION__","f","DrawTools","getJobState","getJobStatus","getJobError","Title","Typography","Text","Option","Select","Menu","useState","drawTool","setDrawTool","dispatch","useDispatch","useSelector","jobState","jobError","handleDrawToolClick","tool","dispatchSetCol","useCallback","val","dispatchSetRow","dispatchStartJob","className","level","strong","title","placement","type","DrawStartNode","onClick","NodeExpandOutlined","DrawEndNode","NodeCollapseOutlined","DrawObstacle","StopOutlined","placeholder","value","min","max","onChange","disabled","findPath$","adjList","start","end","path","target","queue","found","Set","length","add","curr","shift","undefined","has","neighbours","Bfs","from","pipe","concatMap","x","of","delay","GridItem","path$","setFound","completeJob","useEffect","subSink","SubSink","sink","subscribe","foundNum","unsubscribe","classnames","id","toString","NumberGrid","startingNode","numRows","numCols","DIRECTIONS","chunk","range","forEach","row","i","entry","j","dir","nextRow","nextCol","AdjacencyList","parseInt","map","gutter","wrap","col","keyDown$","fromEvent","document","keyUp$","takeUntil","App","setKeyPressed","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","compose","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.59b20879.chunk.js","sourcesContent":["import { GridState } from \"store/Grid/types\";\nimport actionCreatorFactory from \"typescript-fsa\";\nimport { reducerWithInitialState as makeReducer } from \"typescript-fsa-reducers\";\n\nconst actionCreator = actionCreatorFactory(\"GRID\");\n\nconst INITIAL_STATE: GridState = {\n\trows: 10,\n\tcols: 10,\n};\n\nconst MAX_DIMENSION = 50;\nconst MIN_DIMENSION = 1;\n\nexport function withinDimensions(newDimension: number) {\n\treturn newDimension <= MAX_DIMENSION && newDimension > MIN_DIMENSION;\n}\n\nexport const gridActionCreators = {\n\tINC_COL: actionCreator(\"INC_COL\"), // TODO: future extension with keyboard\n\tDEC_COL: actionCreator(\"DEC_COL\"),\n\tINC_ROW: actionCreator(\"INC_ROW\"),\n\tDEC_ROW: actionCreator(\"DEC_ROW\"),\n\tSET_ROW: actionCreator<number>(\"SET_ROW\"),\n\tSET_COL: actionCreator<number>(\"SET_COL\"),\n};\n\nexport const gridReducer = makeReducer(INITIAL_STATE)\n\t.case(gridActionCreators.INC_COL, (state: GridState) => ({\n\t\t...state,\n\t\tcols: withinDimensions(state.cols + 1) ? state.cols + 1 : state.cols,\n\t}))\n\t.case(gridActionCreators.DEC_COL, (state: GridState) => ({\n\t\t...state,\n\t\tcols: withinDimensions(state.cols - 1) ? state.cols - 1 : state.cols,\n\t}))\n\t.case(gridActionCreators.INC_ROW, (state: GridState) => ({\n\t\t...state,\n\t\trows: withinDimensions(state.rows + 1) ? state.rows + 1 : state.rows,\n\t}))\n\t.case(gridActionCreators.DEC_ROW, (state: GridState) => ({\n\t\t...state,\n\t\trows: withinDimensions(state.rows - 1) ? state.rows - 1 : state.rows,\n\t}))\n\t.case(gridActionCreators.SET_COL, (state: GridState, newCols: number) => ({\n\t\t...state,\n\t\tcols: withinDimensions(newCols) ? newCols : state.cols,\n\t}))\n\t.case(gridActionCreators.SET_ROW, (state: GridState, newRows: number) => ({\n\t\t...state,\n\t\trows: withinDimensions(newRows) ? newRows : state.rows,\n\t}));\n","import * as _ from \"lodash\";\n\nimport actionCreatorFactory from \"typescript-fsa\";\nimport { reducerWithInitialState as makeReducer } from \"typescript-fsa-reducers\";\n\nimport { ObstaclesState } from \"./types\";\n\nconst actionCreator = actionCreatorFactory(\"OBSTACLES\");\n\nconst INITIAL_STATE: ObstaclesState = {\n\tobstacles: [],\n};\n\nexport const obstaclesActionCreators = {\n\tADD_GRID_ITEM: actionCreator<string>(\"ADD_GRID_ITEM\"),\n\tREMOVE_GRID_ITEM: actionCreator<string>(\"REMOVE_GRID_ITEM\"),\n\tCLEAR_OBSTACLE: actionCreator(\"CLEAR_OBSTACLE\"),\n};\n\nexport const obstaclesReducer = makeReducer(INITIAL_STATE)\n\t.case(\n\t\tobstaclesActionCreators.ADD_GRID_ITEM,\n\t\t(state: ObstaclesState, uuid: string) => {\n\t\t\tconst obstacles = _.cloneDeep(state.obstacles);\n\t\t\tif (!_.some(obstacles, { uuid })) {\n\t\t\t\tobstacles.push({ uuid });\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tobstacles,\n\t\t\t};\n\t\t}\n\t)\n\t.case(\n\t\tobstaclesActionCreators.REMOVE_GRID_ITEM,\n\t\t(state: ObstaclesState, uuid: string) => ({\n\t\t\t...state,\n\t\t\tobstacles: _.remove(\n\t\t\t\tstate.obstacles,\n\t\t\t\t(obstacle) => obstacle.uuid === uuid\n\t\t\t),\n\t\t})\n\t)\n\t.case(\n\t\tobstaclesActionCreators.CLEAR_OBSTACLE,\n\t\t(state: ObstaclesState) => state\n\t);\n","import { State } from \"store/state\";\n\nconst getGridState = (state: State) => state.grid;\n\nexport const getGridRowsCols = (state: State) => ({\n\trows: getGridState(state).rows,\n\tcols: getGridState(state).cols,\n});\n","export * from \"./Obstacles\";\nexport * from \"./selectors\";\nexport * from \"./types\";\n","export enum JobStatus {\n\tRunning,\n\tIdle,\n\tError,\n}\n\nexport interface JobState {\n\tstatus: JobStatus;\n\terrorMessage?: string;\n}\n","import { JobState, JobStatus } from \"store/Job/types\";\nimport actionCreatorFactory from \"typescript-fsa\";\nimport { reducerWithInitialState as makeReducer } from \"typescript-fsa-reducers\";\n\nconst actionCreator = actionCreatorFactory(\"JOB\");\n\nconst INITIAL_STATE: JobState = {\n\tstatus: JobStatus.Idle,\n};\n\nexport const jobActionCreators = {\n\tSTART_JOB: actionCreator(\"START\"),\n\tSTOP_JOB: actionCreator(\"STOP\"),\n\tSET_ERROR: actionCreator<string | undefined>(\"SET_ERROR\"),\n\tRESOLVE_ERROR: actionCreator(\"RESOLVE_ERROR\"),\n};\n\nexport const jobReducer = makeReducer(INITIAL_STATE)\n\t.case(jobActionCreators.START_JOB, (state: JobState) => ({\n\t\t...state,\n\t\tstatus: JobStatus.Running,\n\t}))\n\t.case(jobActionCreators.STOP_JOB, (state: JobState) => ({\n\t\t...state,\n\t\tstatus: JobStatus.Idle,\n\t}))\n\t.case(\n\t\tjobActionCreators.SET_ERROR,\n\t\t(state: JobState, errorMessage?: string) => ({\n\t\t\t...state,\n\t\t\tstatus: JobStatus.Error,\n\t\t\terrorMessage,\n\t\t})\n\t)\n\t.case(jobActionCreators.RESOLVE_ERROR, (state: JobState) => ({\n\t\t...state,\n\t\tstatus: JobStatus.Idle,\n\t}));\n","import { combineReducers } from \"redux\";\n\nimport { gridReducer } from \"store/Grid/Grid\";\nimport { jobReducer } from \"store/Job/Job\";\n\nimport { obstaclesReducer } from \"./Obstacles\";\nimport { State } from \"./state\";\n\nconst createRootReducer = () =>\n\tcombineReducers<State>({\n\t\tobstacles: obstaclesReducer,\n\t\tgrid: gridReducer,\n\t\tjob: jobReducer,\n\t});\n\nexport default createRootReducer;\n","import { compose, createStore, StoreEnhancer } from \"redux\";\n\nimport createRootReducer from \"./reducers\";\n\ninterface HasDevToolsExtension {\n\t__REDUX_DEVTOOLS_EXTENSION__: () => StoreEnhancer;\n}\n\nconst devToolsExtension: StoreEnhancer =\n\ttypeof window === \"object\" &&\n\t((window as unknown) as Window & HasDevToolsExtension)\n\t\t.__REDUX_DEVTOOLS_EXTENSION__\n\t\t? ((window as unknown) as Window &\n\t\t\t\tHasDevToolsExtension).__REDUX_DEVTOOLS_EXTENSION__()\n\t\t: (f) => f;\n\nexport function initStore() {\n\tconst store = createStore(createRootReducer(), compose(devToolsExtension));\n\treturn store;\n}\n","import {\n\tNodeCollapseOutlined,\n\tNodeExpandOutlined,\n\tStopOutlined,\n} from \"@ant-design/icons\";\nimport {\n\tButton,\n\tForm,\n\tInputNumber,\n\tSelect,\n\tSpin,\n\tTooltip,\n\tTypography,\n} from \"antd\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { getGridRowsCols, gridActionCreators } from \"store/Grid\";\nimport {\n\tgetJobError,\n\tgetJobStatus,\n\tjobActionCreators,\n\tJobStatus,\n} from \"store/Job\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\n// TODO: refactor to tools store\nexport enum DrawTools {\n\tDrawObstacle,\n\tDrawEndNode,\n\tDrawStartNode,\n}\n\nexport default function Menu() {\n\tconst [drawTool, setDrawTool] = useState<DrawTools | null>();\n\tconst dispatch = useDispatch();\n\tconst { rows, cols } = useSelector(getGridRowsCols);\n\tconst jobState = useSelector(getJobStatus);\n\tconst jobError = useSelector(getJobError);\n\n\tconst handleDrawToolClick = (tool: DrawTools) => {\n\t\tif (drawTool === tool) {\n\t\t\tsetDrawTool(null);\n\t\t} else {\n\t\t\tsetDrawTool(tool);\n\t\t}\n\t};\n\n\tconst dispatchSetCol = useCallback(\n\t\t(val: number) => {\n\t\t\tdispatch(gridActionCreators.SET_COL(val));\n\t\t},\n\t\t[dispatch]\n\t);\n\n\tconst dispatchSetRow = useCallback(\n\t\t(val: number) => {\n\t\t\tdispatch(gridActionCreators.SET_ROW(val));\n\t\t},\n\t\t[dispatch]\n\t);\n\n\tconst dispatchStartJob = useCallback(() => {\n\t\tdispatch(jobActionCreators.START_JOB());\n\t}, [dispatch]);\n\n\treturn (\n\t\t<div className=\"vh-100 w-300px p-10 border-right-gray\">\n\t\t\t<Title level={3}>Pathfinding</Title>\n\t\t\t<Text strong>Tools</Text>\n\t\t\t<div className=\"w-100p d-flex justify-start mt-10 mb-20\">\n\t\t\t\t<Tooltip title=\"Draw Starting Node\" placement=\"bottomRight\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype={drawTool === DrawTools.DrawStartNode ? \"primary\" : \"default\"}\n\t\t\t\t\t\tonClick={() => handleDrawToolClick(DrawTools.DrawStartNode)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<NodeExpandOutlined />\n\t\t\t\t\t</Button>\n\t\t\t\t</Tooltip>\n\t\t\t\t<Tooltip title=\"Draw Ending Node\" placement=\"bottomRight\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype={drawTool === DrawTools.DrawEndNode ? \"primary\" : \"default\"}\n\t\t\t\t\t\tonClick={() => handleDrawToolClick(DrawTools.DrawEndNode)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<NodeCollapseOutlined />\n\t\t\t\t\t</Button>\n\t\t\t\t</Tooltip>\n\t\t\t\t<Tooltip title=\"Draw Obstacles\" placement=\"bottomRight\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype={drawTool === DrawTools.DrawObstacle ? \"primary\" : \"default\"}\n\t\t\t\t\t\tonClick={() => handleDrawToolClick(DrawTools.DrawObstacle)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<StopOutlined />\n\t\t\t\t\t</Button>\n\t\t\t\t</Tooltip>\n\t\t\t</div>\n\t\t\t<Text strong>Algorithm</Text>\n\t\t\t<Select className=\"w-100p mt-10 mb-20\" placeholder=\"Select Algorithm\">\n\t\t\t\t<Option value=\"1\">Breadth First Search</Option>\n\t\t\t\t<Option value=\"2\">Depth First Search</Option>\n\t\t\t</Select>\n\t\t\t<Text strong>Grid Size</Text>\n\t\t\t<Form className=\"mt-10 mb-20\">\n\t\t\t\t<Tooltip title=\"Width\" placement=\"bottomRight\">\n\t\t\t\t\t<InputNumber\n\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\tmax={50}\n\t\t\t\t\t\tvalue={cols}\n\t\t\t\t\t\tonChange={(val) => typeof val === \"number\" && dispatchSetCol(val)}\n\t\t\t\t\t/>\n\t\t\t\t</Tooltip>\n\t\t\t\t<Tooltip title=\"Height\" placement=\"bottomRight\">\n\t\t\t\t\t<InputNumber\n\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\tmax={50}\n\t\t\t\t\t\tvalue={rows}\n\t\t\t\t\t\tonChange={(val) => typeof val === \"number\" && dispatchSetRow(val)}\n\t\t\t\t\t/>\n\t\t\t\t</Tooltip>\n\t\t\t</Form>\n\t\t\t<Button\n\t\t\t\tclassName=\"w-100p\"\n\t\t\t\ttype=\"primary\"\n\t\t\t\tonClick={dispatchStartJob}\n\t\t\t\tdisabled={jobState !== JobStatus.Idle}\n\t\t\t>\n\t\t\t\t{jobState === JobStatus.Idle ? \"Start Pathfinding\" : <Spin />}\n\t\t\t</Button>\n\t\t\t{jobError && <Text type=\"danger\">An error occured: {jobError}</Text>}\n\t\t</div>\n\t);\n}\n","import { State } from \"store/state\";\n\nconst getJobState = (state: State) => state.job;\n\nexport const getJobStatus = (state: State) => getJobState(state).status;\n\nexport const getJobError = (state: State) => getJobState(state).errorMessage;\n","import { from, of } from \"rxjs\";\nimport { concatMap, delay } from \"rxjs/operators\";\n\nimport { IAdjacencyList } from \"service/AdjacencyList\";\nimport Bfs from \"service/Bfs\";\n\nexport function findPath$(\n\tadjList: IAdjacencyList,\n\tstart: number,\n\tend?: number\n) {\n\tconst path = Bfs(adjList, start, end);\n\tif (!path) {\n\t\treturn;\n\t}\n\treturn from(path).pipe(concatMap((x) => of(x).pipe(delay(50))));\n}\n","import { IAdjacencyList } from \"service/AdjacencyList\";\n\nexport default function Bfs(\n\tadjList: IAdjacencyList,\n\tstart: number,\n\ttarget?: number\n) {\n\tconst queue: number[] = [];\n\tconst found: Set<number> = new Set();\n\n\tif (!adjList[start] || adjList[start].length === 0) {\n\t\treturn null;\n\t}\n\n\tqueue.push(...adjList[start]);\n\tfound.add(start);\n\n\twhile (queue.length > 0) {\n\t\tconst curr = queue.shift();\n\t\tif (curr === undefined || found.has(curr)) {\n\t\t\tcontinue;\n\t\t}\n\t\tfound.add(curr);\n\t\tif (curr === target) {\n\t\t\tbreak;\n\t\t}\n\t\tconst neighbours = adjList[curr];\n\t\tqueue.push(...neighbours);\n\t}\n\n\treturn found;\n}\n","import classnames from \"classnames\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Observable } from \"rxjs\";\nimport { SubSink } from \"subsink\";\n\nimport { jobActionCreators } from \"store/Job\";\n\ninterface GridItemProps {\n\tuuid: number;\n\tstart: number;\n\tpath$: Observable<number> | undefined;\n}\n\nexport default function GridItem({ uuid, start, path$ }: GridItemProps) {\n\tconst [found, setFound] = useState(false);\n\tconst dispatch = useDispatch();\n\n\tconst completeJob = useCallback(() => {\n\t\tdispatch(jobActionCreators.STOP_JOB());\n\t}, [dispatch]);\n\n\tuseEffect(() => {\n\t\tconst subSink = new SubSink();\n\t\tif (path$) {\n\t\t\tsubSink.sink = path$.subscribe(\n\t\t\t\t(foundNum) => {\n\t\t\t\t\tif (foundNum === uuid) {\n\t\t\t\t\t\tsetFound(true);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tnull,\n\t\t\t\tcompleteJob\n\t\t\t);\n\t\t}\n\t\treturn () => subSink.unsubscribe();\n\t});\n\n\treturn (\n\t\t<div\n\t\t\tclassName={classnames(\n\t\t\t\t\"grid-item\",\n\t\t\t\t{ \"grid-item-start\": start === uuid },\n\t\t\t\t{ \"grid-item-found\": found }\n\t\t\t)}\n\t\t\tid={uuid.toString()}\n\t\t>\n\t\t\t{uuid}\n\t\t</div>\n\t);\n}\n","import { Col, Row } from \"antd\";\nimport { chunk, range } from \"lodash\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Observable } from \"rxjs\";\n\nimport AdjacencyList from \"service/AdjacencyList\";\nimport { findPath$ } from \"service/store\";\nimport { getGridRowsCols } from \"store/Grid\";\nimport { getJobStatus, JobStatus } from \"store/Job\";\n\nimport GridItem from \"./GridItem\";\n\nexport default function NumberGrid() {\n\tconst [startingNode] = useState<string>(\"1\");\n\n\tconst { rows: numRows, cols: numCols } = useSelector(getGridRowsCols);\n\tconst jobState = useSelector(getJobStatus);\n\tlet path$: Observable<number> | undefined;\n\n\t// let path$: Observable<number> | undefined;\n\n\t// useEffect(() => {\n\t// \tconst subSink = new SubSink();\n\t// TODO: refactor this into a pure js file, use store.dispatch() to set the\n\t// \t// starting node\n\t// \tsubSink.sink = mouseClick$.subscribe(({ target }) => {\n\t// \t\t// TODO: combine with key down\n\t// \t\tconst targetElement = target as HTMLElement;\n\t// \t\tsetStartingNode(targetElement.id);\n\t// \t});\n\t// \treturn () => {\n\t// \t\tsubSink.unsubscribe();\n\t// \t};\n\t// }, []);\n\n\tif (jobState === JobStatus.Running) {\n\t\tconst adjList = AdjacencyList(numRows, numCols);\n\t\tpath$ = findPath$(adjList, parseInt(startingNode));\n\t}\n\n\t// if (!path$ || jobState !== JobStatus.Running) {\n\t// \treturn null;\n\t// }\n\n\tconst grid = range(0, numRows * numCols, 1);\n\tconst rows = chunk(grid, numCols);\n\n\treturn (\n\t\t<div className=\"number-grid-container d-flex justify-center align-center\">\n\t\t\t<div className=\"overflow-auto\">\n\t\t\t\t{rows.map((cols, i) => (\n\t\t\t\t\t<Row gutter={0} key={i} wrap={false}>\n\t\t\t\t\t\t{cols.map((col, j) => (\n\t\t\t\t\t\t\t<Col key={j}>\n\t\t\t\t\t\t\t\t<GridItem\n\t\t\t\t\t\t\t\t\tuuid={col}\n\t\t\t\t\t\t\t\t\tstart={parseInt(startingNode)}\n\t\t\t\t\t\t\t\t\tpath$={path$}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Row>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { chunk, range } from \"lodash\";\n\nexport interface IAdjacencyList {\n\t[key: number]: number[];\n}\n\nexport default function AdjacencyList(rows: number, cols: number) {\n\tconst DIRECTIONS = [\n\t\t[-1, -1],\n\t\t[-1, 0],\n\t\t[-1, 1],\n\t\t[0, 1],\n\t\t[0, -1],\n\t\t[1, 1],\n\t\t[1, 0],\n\t\t[1, -1],\n\t];\n\n\tconst grid = chunk(range(0, rows * cols, 1), cols);\n\n\tconst adjList: IAdjacencyList = {};\n\tgrid.forEach((row, i) => {\n\t\trow.forEach((entry, j) => {\n\t\t\tconst curr: number[] = [];\n\t\t\tDIRECTIONS.forEach((dir) => {\n\t\t\t\tconst nextRow = i + dir[0];\n\t\t\t\tconst nextCol = j + dir[1];\n\t\t\t\tif (\n\t\t\t\t\tnextRow < 0 ||\n\t\t\t\t\tnextRow >= grid.length ||\n\t\t\t\t\tnextCol < 0 ||\n\t\t\t\t\tnextCol >= grid[0].length\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcurr.push(grid[nextRow][nextCol]);\n\t\t\t});\n\n\t\t\tadjList[entry] = curr;\n\t\t});\n\t});\n\n\treturn adjList;\n}\n","import { fromEvent } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\n\nconst mouseClick$ = fromEvent<MouseEvent>(document, \"click\");\nconst keyDown$ = fromEvent<KeyboardEvent>(document, \"keydown\");\nconst keyUp$ = fromEvent<KeyboardEvent>(document, \"keyup\");\n\nconst whileKeyPress$ = keyDown$.pipe(takeUntil(keyUp$));\n\nexport { mouseClick$, whileKeyPress$, keyDown$, keyUp$ };\n","import React, { useEffect, useState } from \"react\";\nimport { SubSink } from \"subsink\";\n\nimport Menu from \"components/Menu\";\nimport NumberGrid from \"components/NumberGrid\";\nimport { keyDown$, keyUp$ } from \"interactions\";\n\nimport \"./App.css\";\n\nexport function App() {\n\tconst [, setKeyPressed] = useState<string | null>();\n\n\tuseEffect(() => {\n\t\tconst subSink = new SubSink();\n\n\t\tsubSink.sink = keyDown$.subscribe(({ key }) => {\n\t\t\tsetKeyPressed(key);\n\t\t});\n\n\t\tsubSink.sink = keyUp$.subscribe(() => {\n\t\t\tsetKeyPressed(null);\n\t\t});\n\n\t\treturn () => {\n\t\t\tsubSink.unsubscribe();\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<Menu />\n\t\t\t<NumberGrid />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { initStore } from \"store/store\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"./index.css\";\n\nconst store = initStore();\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export * from \"./selectors\";\nexport * from \"./Grid\";\nexport * from \"./types\";\n"],"sourceRoot":""}