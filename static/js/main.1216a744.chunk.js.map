{"version":3,"sources":["components/GridItem.tsx","service/store.ts","service/Bfs.ts","interactions/index.ts","components/NumberGrid.tsx","service/AdjacencyList.ts","App.tsx","reportWebVitals.ts","store/reducers.ts","store/store.ts","index.tsx","store/Obstacles/index.ts","store/Obstacles/Obstacles.ts"],"names":["GridItem","uuid","start","path$","useState","found","setFound","useEffect","subSink","SubSink","sink","subscribe","foundNum","unsubscribe","className","classnames","id","toString","findPath$","adjList","end","path","target","queue","Set","length","push","add","curr","shift","undefined","has","neighbours","Bfs","from","pipe","concatMap","x","of","delay","mouseClick$","fromEvent","document","keyDown$","keyUp$","takeUntil","NumberGrid","startingNode","setStartingNode","dispatch","useDispatch","targetElement","obstaclesActionCreators","ADD_GRID_ITEM","rows","cols","DIRECTIONS","grid","chunk","range","forEach","row","i","entry","j","dir","nextRow","nextCol","AdjacencyList","parseInt","map","gutter","col","App","keyPressed","setKeyPressed","key","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createRootReducer","combineReducers","obstacles","obstaclesReducer","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION__","f","store","createStore","compose","ReactDOM","render","getElementById","actionCreator","actionCreatorFactory","REMOVE_GRID_ITEM","CLEAR_OBSTACLE","makeReducer","case","state","_","obstacle"],"mappings":"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","file":"static/js/main.1216a744.chunk.js","sourcesContent":["import classnames from \"classnames\";\nimport React, { useEffect, useState } from \"react\";\nimport { Observable } from \"rxjs\";\nimport { SubSink } from \"subsink\";\n\ninterface GridItemProps {\n  uuid: number;\n  start: number;\n  path$: Observable<number>;\n}\n\nexport default function GridItem({ uuid, start, path$ }: GridItemProps) {\n  const [found, setFound] = useState(false);\n\n  useEffect(() => {\n    const subSink = new SubSink();\n    subSink.sink = path$.subscribe((foundNum) => {\n      if (foundNum === uuid) {\n        setFound(true);\n      }\n    });\n\n    return () => subSink.unsubscribe();\n  });\n\n  return (\n    <div\n      className={classnames(\n        \"grid-item\",\n        { \"grid-item-start\": start === uuid },\n        { \"grid-item-found\": found }\n      )}\n      id={uuid.toString()}\n    >\n      {uuid}\n    </div>\n  );\n}\n","import { from, of } from \"rxjs\";\nimport { concatMap, delay } from \"rxjs/operators\";\nimport { IAdjacencyList } from \"./AdjacencyList\";\nimport Bfs from \"./Bfs\";\n\nexport function findPath$(\n  adjList: IAdjacencyList,\n  start: number,\n  end?: number\n) {\n  const path = Bfs(adjList, start, end);\n  if (!path) {\n    return;\n  }\n  return from(path).pipe(concatMap((x) => of(x).pipe(delay(50))));\n}\n","import { IAdjacencyList } from \"./AdjacencyList\";\n\nexport default function Bfs(\n  adjList: IAdjacencyList,\n  start: number,\n  target?: number\n) {\n  let queue: number[] = [];\n  let found: Set<number> = new Set();\n\n  if (!adjList[start] || adjList[start].length === 0) {\n    return null;\n  }\n\n  queue.push(...adjList[start]);\n  found.add(start);\n\n  while (queue.length > 0) {\n    let curr = queue.shift();\n    if (curr === undefined || found.has(curr)) {\n      continue;\n    }\n    found.add(curr);\n    if (curr === target) {\n      break;\n    }\n    let neighbours = adjList[curr];\n    queue.push(...neighbours);\n  }\n\n  return found\n}\n","import { fromEvent } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\n\nconst mouseClick$ = fromEvent<MouseEvent>(document, \"click\");\nconst keyDown$ = fromEvent<KeyboardEvent>(document, \"keydown\");\nconst keyUp$ = fromEvent<KeyboardEvent>(document, \"keyup\");\n\nconst whileKeyPress$ = keyDown$.pipe(takeUntil(keyUp$));\n\nexport { mouseClick$, whileKeyPress$, keyDown$, keyUp$ };\n","import { Col, Row } from \"antd\";\nimport { chunk, range } from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport GridItem from \"./GridItem\";\nimport AdjacencyList from \"../service/AdjacencyList\";\nimport { findPath$ } from \"../service/store\";\nimport { SubSink } from \"subsink\";\nimport { mouseClick$ } from \"../interactions\";\nimport { useDispatch } from \"react-redux\";\nimport { obstaclesActionCreators } from \"../store/Obstacles\";\n\nexport default function NumberGrid() {\n  const [startingNode, setStartingNode] = useState<string>(\"1\");\n  // TODO: shift this to redux\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const subSink = new SubSink();\n    subSink.sink = mouseClick$.subscribe(({ target }) => {\n      // TODO: combine with key down\n      let targetElement = target as HTMLElement;\n      setStartingNode(targetElement.id);\n      dispatch(obstaclesActionCreators.ADD_GRID_ITEM(targetElement.id));\n    });\n    return () => {\n      subSink.unsubscribe();\n    };\n  }, [dispatch]);\n\n  const adjList = AdjacencyList(10, 10);\n  const path$ = findPath$(adjList, parseInt(startingNode));\n\n  if (!path$) {\n    return null;\n  }\n\n  const grid = range(0, 100, 1);\n  const rows = chunk(grid, 10);\n  return (\n    <>\n      {rows.map((cols) => (\n        <Row gutter={0}>\n          {cols.map((col) => (\n            <Col>\n              <GridItem\n                uuid={col}\n                start={parseInt(startingNode)}\n                path$={path$}\n              />\n            </Col>\n          ))}\n        </Row>\n      ))}\n    </>\n  );\n}\n","import { chunk, range } from \"lodash\";\n\nexport interface IAdjacencyList {\n  [key: number]: number[];\n}\n\nexport default function AdjacencyList(rows: number, cols: number) {\n  const DIRECTIONS = [\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n    [0, 1],\n    [0, -1],\n    [1, 1],\n    [1, 0],\n    [1, -1],\n  ];\n\n  const grid = chunk(range(0, rows * cols, 1), cols);\n\n  const adjList: IAdjacencyList = {};\n  grid.forEach((row, i) => {\n    row.forEach((entry, j) => {\n      let curr: number[] = [];\n      DIRECTIONS.forEach((dir) => {\n        const nextRow = i + dir[0];\n        const nextCol = j + dir[1];\n        if (\n          nextRow < 0 ||\n          nextRow >= grid.length ||\n          nextCol < 0 ||\n          nextCol >= grid[0].length\n        ) {\n          return;\n        }\n        curr.push(grid[nextRow][nextCol]);\n      });\n\n      adjList[entry] = curr;\n    });\n  });\n\n  return adjList;\n}\n","import { Tag } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { SubSink } from \"subsink\";\nimport \"./App.css\";\nimport NumberGrid from \"./components/NumberGrid\";\nimport { keyDown$, keyUp$ } from \"./interactions\";\n\nfunction App() {\n  const [keyPressed, setKeyPressed] = useState<string | null>();\n\n  useEffect(() => {\n    const subSink = new SubSink();\n\n    subSink.sink = keyDown$.subscribe(({ key }) => {\n      setKeyPressed(key);\n    });\n\n    subSink.sink = keyUp$.subscribe(() => {\n      setKeyPressed(null);\n    });\n\n    return () => {\n      subSink.unsubscribe();\n    };\n  }, []);\n  return (\n    <div>\n      <Tag color={keyPressed === \"o\" ? \"processing\" : \"default\"}>\n        Draw Obstacle\n      </Tag>\n      <Tag color={keyPressed === \"s\" ? \"processing\" : \"default\"}>\n        Draw Start\n      </Tag>\n      <Tag color={keyPressed === \"e\" ? \"processing\" : \"default\"}>Draw End</Tag>\n      <NumberGrid />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport { obstaclesReducer } from \"./Obstacles\";\nimport { State } from \"./state\";\n\nconst createRootReducer = () =>\n  combineReducers<State>({\n    obstacles: obstaclesReducer,\n  });\n\nexport default createRootReducer;\n","import { compose, createStore, StoreEnhancer } from \"redux\";\nimport createRootReducer from \"./reducers\";\n\ninterface HasDevToolsExtension {\n  __REDUX_DEVTOOLS_EXTENSION__: () => StoreEnhancer;\n}\n\nconst devToolsExtension: StoreEnhancer =\n  typeof window === \"object\" &&\n  ((window as unknown) as Window & HasDevToolsExtension)\n    .__REDUX_DEVTOOLS_EXTENSION__\n    ? ((window as unknown) as Window &\n        HasDevToolsExtension).__REDUX_DEVTOOLS_EXTENSION__()\n    : (f) => f;\n\nexport function initStore() {\n  const store = createStore(createRootReducer(), compose(devToolsExtension));\n  return store;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { initStore } from \"./store/store\";\n\nconst store = initStore();\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export * from \"./Obstacles\";\nexport * from \"./selectors\";\nexport * from \"./types\";\n","import actionCreatorFactory from \"typescript-fsa\";\nimport * as _ from \"lodash\";\nimport { reducerWithInitialState as makeReducer } from \"typescript-fsa-reducers\";\nimport { ObstaclesState } from \"./types\";\n\nconst actionCreator = actionCreatorFactory(\"OBSTACLES\");\n\nconst INITIAL_STATE: ObstaclesState = {\n  obstacles: [],\n};\n\nexport const obstaclesActionCreators = {\n  ADD_GRID_ITEM: actionCreator<string>(\"ADD_GRID_ITEM\"),\n  REMOVE_GRID_ITEM: actionCreator<string>(\"REMOVE_GRID_ITEM\"),\n  CLEAR_OBSTACLE: actionCreator(\"CLEAR_OBSTACLE\"),\n};\n\nexport const obstaclesReducer = makeReducer(INITIAL_STATE)\n  .case(\n    obstaclesActionCreators.ADD_GRID_ITEM,\n    (state: ObstaclesState, uuid: string) => {\n      const obstacles = _.cloneDeep(state.obstacles);\n      if (!_.some(obstacles, { uuid })) {\n        obstacles.push({ uuid });\n      }\n      return {\n        ...state,\n        obstacles,\n      };\n    }\n  )\n  .case(\n    obstaclesActionCreators.REMOVE_GRID_ITEM,\n    (state: ObstaclesState, uuid: string) => ({\n      ...state,\n      obstacles: _.remove(\n        state.obstacles,\n        (obstacle) => obstacle.uuid === uuid\n      ),\n    })\n  )\n  .case(\n    obstaclesActionCreators.CLEAR_OBSTACLE,\n    (state: ObstaclesState) => state\n  );\n"],"sourceRoot":""}